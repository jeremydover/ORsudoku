1/26/2025 bis
	Added support for conditional sum lines, the line version of hanging sums.
	Added new selection criterion for hanging sums: uniparity, where all odds or evens are chosen.
	The same bug from implementing lots reared its head a couple more times, smashed down again.
	Added test case.

1/26/2025
	Added support for copycat cells, and added a test case.
	Implementation discovered a bug in selection for hanging clues/lots which is fixed.

1/25/2025 bis
	Added support for Dutch flat mates, and a test case.

1/25/2025
	Reconfigured select and terminate criteria to unify code behind Parity, Modular, Entropy and Primality. Makes addition of
	any other digit classifications pretty straightforward.
	Implemented new selection criteria: 'ParityMatch' (and EntropyMatch...), and Unique Digits.
	Implemented support for lot lines (Issue #60) 
	
1/24/2025
	Added depth support to skyscrapers clues, so that clues only "see" a fixed number of cells into the puzzle
	Added test cases.
	Moved row/col condition selector to a utility function, simplifying HangingSum implementation, and allowing code to be repurposed for XCount.
	Added an 'Indexed' termination constraint to the hanging code, so that termination can be picked via indexing, a la XSums. While XSums can now be implemented as Hanging Sums, the implementation is quite a bit slower.
	Implemented XCount and XAverage clues via analogous HangingCount and HangingAverage. Added test cases.
	Added 'DigitSet', 'BeforeDigit' and 'AfterDigit' selection criteria for hanging clues.

1/23/2025bis
	Added some test cases.
	Added support for neighbor sets, which assert a cell has a neighbor matching on some property.
	Added additional features to X-Sums, which allows the cell which picks the length of the sum to be in the first given number of cells, or in the first region.

1/23/2025
	Pushed earlier in the day was a "behind-the-scenes" update that cleaned up some base object variables that needed to be duplicated across the code base. Nothing fancy, all tests still passed, some technical debt paid down.
	This latest push contains the implementation of hanging sums. Basically, these give you pretty granular detail on how to pick cells to create
	a sum, and how far into the grid the sum should extend. Very powerful. Maybe too powerful. You can implement "the sum of the even digits starting from the third cell and continuing until the fourth odd digit in the row is 8". But you really shouldn't unless you want solvers to hate you. Parity party can be implemented with this function (though there's an existing native setParityParty), but there are some other test cases for which this works too.

1/22/2025
	Fixed error in Roman sums shorthand processing with multi-digit sum values.
	Fixed error in Schrödinger sum application of XV negative constraint.
	Fixed error in shift line code.
	Added Schrödinger support for whispers lines.
	Implemented support for ambiguous cages, where the cage sum may be one of several values.
	Added support for index lines, including a test case.
	For transform and S-cells, added anti-knight rules to ensure modifier cells are not a knight's move apart.
	For transform sudoku, added rule to ensure that for each modifier cell, no cell a king's (or a knight's) move from the modifier has the same base digit.
	Implemented short sandwich clues, and added test case. Updated sandwich sums to allow clues on bottom/right of grid.
	Updated to test harness to allow pytest as well as nose2.
	Added support for NextToNine sum clues.
	Added support for XAverages, including test case.
	Added support for offset digits, including test case.
	Added support for "domino-based" negative constraints for Kropki and Roman sums; negative constraint is only applied between two adjacent cells that are not already in a positive clue.
	Added support for remote Kropki arrows...negative constraint is not supported.
	Added additional test cases.

1/21/2025
	Fixed error in setParityCountLine, and added test case.
	Fixed some bugs in Schrödinger cell module left over from migration to v1.0.
	Simplified Schrödinger Renban and Between line code, added test cases.
	Fixed error in Schrödinger XV negative constraint code, added test cases.
	Fixed error in WeakPalindromeLine implementation, and added test case.
	Added additional test cases.
	And, oh why did I start this? Changing to a new model of negative constraint tracking that does not require separate class variables for each type (God that was dumb).
	Oh, this is why I started this: created ability to separate Kropki black/white and XV X/V from a negative constraint perspective, so that we can support only a negative X constraint, or a negative black Kropki constraint.
	And because I'm a glutton for punishment, also re-did the XV code to generalize to "Roman sums", to allow any values to be used, and have a negative constraint applied.

1/19/2025 bis
	Fixed syntax error in _solving module for listCandidates solving method.
	Updated setNearestNeighbors method to accept a single direction as an int, instead of a list with a single int.
	Added additional test cases.

1/19/2025
	Added anti-king support for Schrödinger cells and transform cells (doublers), asserting that the modified cells are not diagonally adjacent.
	Added support and test case for crust sandwiches.
	Added support and test case for bust constraints. (h/t clover!)
	Added support and test case for sequence lines.
	Added additional test cases.

1/18/2025
	Major re-factor of code into multiple files. Ideally no impact to functionality.
	Added support for equal sum cages.
	Added test cases.

1/16/2025
	Moved quattroQuadri class to its own file, updated documentation, test case and change log to support.
	Moved cellTransformSudoku (doublers, negators, etc.) classes to their own file, updated documentation, test cases and change log to support.
	Moved doubleDoku and samuraiSubdoku into their own multiSudoku file, updated documentation, test cases and change log to support.
	Moved Schrödinger cell classes into the own file, updated documentation, test cases and change log to support.
	Moved scarySudoku class to its own file. Updated documentation and change log to support.
	Added test cases.

12/28/2024
	Updated position sum constraint to allow only one of position sum or value sum to be clued.
	Updated documentation for Search Nine clues to indicate that a set of digits can be pointed to by an arrow.
	Added test cases.

10/13/2024
	Added support for split pea/split pill lines

10/1/2024
	Added test case for full rank and parity party

9/5/2024
	Added code to have findSolution return the solver status when not in test mode.

9/4/2024 bis
	Added alias for Look-And-Say Cages that parses the typical clue string, and creates the appropriate zone.
	Added support for psycho look-and-say cages. Thanks to The Book Wyrm for the inspiration and initial ideas on coding.

9/4/2024
	Added support for Unique Pairs Lines, a set of lines where each line has no repeats, and the set of digits on any pair of lines have a most one common digit. Constraint due to Paletron...thanks!
	Added support for cell index lines, a set of lines which index a set of cells, in different rows, columns, and having different digits, such that read one direction or the other, the line indexes a row/column/value triple. Constraint due to KenGlue...thanks!
	Updated zone constraint to allow inclusion of nulls, i.e. digits which cannot appear in the zone.
	
6/11/2024
	Fixed bug in new JSS code that was causing multiple solutions.
	Added support to allow a list of colors to be forced in a row/col, without specifying which group has which color
	Added assertions of shading/unshading/coloring to support lookahead for setting
	Added new test cases.

6/10/24 bis
	Added additional JSS test case

6/10/2024
	Migrated Japanese Sum Sudoku support to a separate file.
	Completely re-did JSS algorithm:
		much simpler model
		faster
		provides multi-color support
		allows ambiguous sum or ambiguous color clues
	Implemented test support for JSS, and added test cases.
	Updated overall test harness to integrate JSS testing with other testing, including modifying some test cases to update test output format.

5/26/2024
	Implemented slingshot clues, added test case.

5/24/2024
	Added support for Regionometers, including test case.
	Updated parity quad code to allow different numbers of disallowed odd/evens per 2x2 quad. Added test case.

5/22/24
	Added support for Extended Whispers Lines, which generalize and implement Run On Nabner and Entropic Whispers Lines.
	Added test cases.
	
5/21/24	
	Added support for negative constraint for XY Differences, and added a test case.
	Updated sandwich sum code to fix issue which was actually occurring in #57. Test for MRE Swap also migrated to countSolutions.
	Did some cleanup in Battlefield constraint code, though this did not resolve issue #57.
	Added support for global neighbor sums, issue #44; added test case.
	Moved most test cases from findSolution to countSolutions, since this gives a stronger test, ensuring that the solver verifies that solutions are unique. This did identify one constraint issue, likely with battlefield constraints.
	Updated solution printer class to accommodate test printing for countSolutions when using cellTransform or Japanese Sums sudoku.
	Updated Quattroquadri code to remove some legacy references to doubler code from which it was copied. Added QuattroQuadri test case.
	Updated Search Nine code to allow arrow to point at one of a list of digits, included test case.
	
5/20/24
	Added support for gray Kropki dots, which are ambiguous and can be either white or black
	Added support for different neighbors constraints...h/t clover!
	Added support for pointing differents clues...h/t clover!...thanks! Through aliasing, added support for AntiDiagonal rules as well
	Added support for first-seen clues. h/t clover! for parity, extended to entropy and modularity
	Added support for uniparity and equiparity cages. Aliased capsule code to use more modern equiparty cage code.
	Added support for nearest neighbor clues (h/t clover!...thanks!)
	Added support for Cupid clues, including test case (h/t Bill Murphy...thanks)
	Added support for line sum lines (h/t clover!...thanks!)
	
5/19/2024
	Added support for Triple Tabs
	Added test case
	
5/1/2024	
	Added 8 new test cases
	Implemented counting circles
	Fixed quadruples code to eliminate bit flopping that was causing countSolutions to fail
	Removed debug printing in MOTE Cage code.
	Updated implementation of global whispers, adding support for forcing differences to be equal to, or less than a specified value, adding to the previously supported greater than. Added alias for Close Neighbors constraint (each cell has at least one consecutive neighbor...kind of anti-non-consecutive).
	Added support for Generalized Knightmare (arbitrary set of forbidden sums a knight's move apart)

1/26/2024
	Added support fo QuattroQuadri
	Fixed/added support for countSolutions printing all solutions for non 9x9 grids

1/16/2024
	Fixed error in affineTransformSudoku class

1/6/2024
	Added support for fast thermos
	Added support for forbidden consecutive sums, generalizing no-seven rules.

12/29/2023
	Added support for shaken clone regions (h/t Bill Murphy...thanks!)

12/24/2023
	Added new tests
	Fixed error in missing arrow code for length 2 arrows.

12/20/2023
	Added support for diagonal mirrors and anti-mirrors. (h/t Xeon Risq for Magnitude and Primality ideas)
	Added support for ascending starter clues (h/t Bill Murphy...thanks!)
	Added support for diagonal consecutive pairs (h/t Philip Newman...thanks!)
	Added support for zipper lines

5/13/2023
	Added support for Knapp Daneben cages...thanks clover!

5/11/2023	
	Added support for renrenbanban lines, h/t DarthParadox...thanks!
	Added support for consecutive chain regions, h/t/ clover!...thanks!
	Added support for consecutive lines
	Added support for Sum Sandwiches, h/t clover!...thanks!

2/17/2023	
	Added support for Outside Diagonal clues, per issue #31...inspired by Sudoku Mahabharat 2023 Round 2, h/t/ to Bill Murphy
	Added support for XY-difference pairs, per issue #32...inspired by glum_hippo, h/t to clover!
	Added support for Rotational Pairs constraint

2/12/2023
	Added test cases for Double X-Sums and Broken 159/Gamma Epsilon
	Added support for Skyscraper Sums, which clue the sum of the Skyscrapers seen...inspired by ICHTUES

2/11/2023	
	Added alias for Gamma-Epsilon rules.
	Updated input for indexing rows and columns to allow a purely negative constraint (i.e., no cells in row/col true)
	Added debug output to support resolution of Issue #25

2/3/2023
	Added support for repelling digits, inspired by pirate sudoku...thanks clover!
	Added support for punctured cages, inspired by zetamath...thanks!
	Added test cases

1/15/2023
	Added support for magic lines...thanks Raumplaner!
	Added support for psycho killer cages, including a test case
	Added support for global Modular squares, similar to Entropy but using the modular grouping of digits
	Added support for knightmare constraint, including test case
	Added support for logic bombs

12/22/22
	Added support for full rank clues
	Added support for David and Goliath pairs (Inspired by Bill Murphy...thanks!)
	Added support for All Odd or Even clues (Inspired by clover!...thanks!)
	Added support for Parity Party clues
	Added support for Double X-Sums

11/17/22
	Added support for minimax clues (Inspired by clover!...thanks!)
	Added support for maximin clues (Inspired by clover!...thanks!)
	Added support for repeating arrows (Inspired by Richard Stolk...thanks!)

10/25/22
	Added support for 10 lines
	Added support for heavy arrows
	Added support for clock lines
	Added support for Either-Or clues
	Added test harness support to doubleDoku puzzles
	Added multiple test cases
	
10/6/22ter
	Added additional test cases

10/6/22bis
	Refactored for issue #28, so now regions are stored as (i,j) (0-base) pairs, instead of as the cellValues variables. Updated all functions that required region-based calculations (Rossini, Outside, Region Sum Lines). Specifically greatly improved implementation of Schrödinger cell region sum lines, which required building a variable index for each line. That was a poor design choice.
	
10/6/22
	Added support for scary cells
	Added support for Order Sums Cages
	Added support for parity quads (like entropic quads but for parity) and Quadro (like global entropy, but for parities)
	Added test case
	
10/2/22
	Most of the constraint additions here were inspired by Richard Stolk's Sudoku Variants Series on LMD. Thanks!
	Added support for not-RenbanLines, which supports an upgrade to the global non-consecutive functionality, allowing non-consecutive to be applied to longer strings of contiguous digits.
	Added support for anti-queen digits and cells, including partial anti-queen cells with no repeats on a single diagonal
	Updated Schrödinger cell functions and documentation.
	Added support for dominant clone regions, sets of regions where the digits in the first clone are greater than the corresponding digits in other clones.
	Added support for DoubleDoku
	Added support for capsules
	Added support for Missing Bulb Thermos, implemented for normal, slow, and OddEven thermos
	Added support for Descriptive Pairs
	Added support for Open-faced Sandwich Sums, aka Before Nine
	Added support for Missing Arrows
	Added support for Bent Diagonals
	Added support for Quad Maximum Parity Values, like Quad Max but only operating on digits of one parity. Two values, one of each parity, may be given.

9/30/22
	Added support for parity snakes
	Added support for No-Three-In-A-Row global constraint
	Added support for maximum triplet clues, and generalized to maximum runs of arbitrary length
	Added support for Search Nine clues.
	Modified setRossini method to not require row/column designation, which is clear from the arrow direction only.
	Updated constants for Left/Right to be distinct from Up/Down. Only impacted method is Rossini clues.
	Added support for Odd-Even Thermos (thermos where all digits are the same parity), and Slow Odd-Even Themors (same thing, but non-decreasing instead of increasing).
	Added Schrödinger test case.
	Thanks to Richard Stolk for the inspiration for most of the new constraints implemented in this push.

9/29/22
	Added support for parity count lines.
	Added support for reverse numbered rooms, and support for negative indices in numbered room clues
	Fixed error in digit treatment for cellTransformSudoku...digit set should be list of base + transformed digits, not just base digits.
	Added test cases.

9/26/22
	Added superposition Schrödinger cell class and some constraints.
	Added support for reverse X-sums (originated by kuraban, thanks to Qodec's recent puzzle for the inspiration!)
	Added support for negative indexing in X-Sums (reverse the side from which sums are taken, a la Python array indexing)

9/23/22
	Implemented support for Schrödinger cell puzzles. Not all constraints are supported, but many of the constraints used in puzzles to date are
	Added test case
	
9/20/22bis
	Implemented code to list candidates for a given cell, or for the entire grid, for 9x9 grids. Produces a list of excluded values which can be pasted into code as hints to speed the candidate search.
	Added test case.

9/20/22
	Re-factored indexing code to fix bug introduced with previous "fix" for Broken 159
	Added support for vaults
	Added additional test cases

9/19/22
	Added test cases
	Added support for Digit Count Cages (thanks clover!)
	Fixed 1-off error in setGlobalEntropy introduced when input was migrated from 0-base to 1-base
	Added test mode to countSolutions method to run tests on partial puzzles with multiple solutions

9/18/22
	Added some debug code to try to troubleshoot weird Broken 159 error in finding all solutions. (Repeatedly reports same solution.)
	Generalized doubler code to accomodate variants, including arbitrary affine transformations (ax+b) and double-or-nothing rules. New framework allows additional generalizations.
	Added new test cases

9/17/22bis
	Added test cases
	Added aliases for EvenOdd (to OddEven) and MinMax (to MaxMin) so that both directions should work seemlessly
	Added Isotopes support per request from rockratzero

9/17/22
	Added support for nabner lines
	Updated whispers line logic to use a generic minimum whispers and maximum whispers, and alias the existing nationality lines
	Updated sandwich sums to allow arbitrary "bread" digits for the sandwich on a constraint by constraint basis
	Implemented Next-To-Nine constraints
	Fixed error in doubler and japanese sum sudoku...needed to synchronize additional negative constraint variable between init methods.
	Added 7 new test cases

9/16/22
	Implemented MOTE (more odd than even) and METO (more even than odd) cages.
	Implemented consecutive quads contstraints, including negative constraint (thanks for the inspiration in today's GAS, clover!)
	Updated Kropki code to allow addition of individual anti-Kropki constraints, and modified negative constraint to call it
	Updated XVXV code to allow addition of individual anti-XVXV constraints, and modified negative constraint to call it
	Updated XV code to allow addition of individual anti-XV constraints, and modified negative constraint to call it
	Updated entropy Battenburg code to allow addition of individual anti-entropy Battenburgs, and modified negative constraint to call it
	Updated entropy quad code to allow addition of individual anti-entropy quads, and modified negative constraint to call it
	Updated friendly cell code to allow addition of individual unfriendly cells, and modified negative constraint to call it

9/15/22
	Added test code
	Updated Battenburg code to allow single cells to be labelled "Anti-Battenburg", i.e. specifically not having the constraint, and updated the global negative constraint code to use it

9/14/22bis
	Issue #20 - Implemented pencilmarks

9/14/22
	Issue #18 - Implemented block cage constraints
	Issue #19 - Implemented skyscraper constraints
	Fixed method names for keypad king and keypad knight lines
	Added additional tests
	
9/12/22bis
	Added support for parity dots (Thanks to BremSter for introducing me to these constraints.)
	Added support for parindrome lines
	Added a bunch of tests
	
9/12/22
	Issue #17 - implemented test harness support, and added test for global whispers
	Issue #11 - added support for max ascending constraints
	Issue #9 - added support for average lines
	Note: again thanks to the GAS setters at CtC Discord: clover, Philip and Sam for unearthing/developing the constraints implemented here

9/11/2022
	Implemented parity values (similar to modular values for mod 3) to ease implementation of parity based clues
	Issue #16 - added support for count-the-odds lines
	Issue #12 - added support for Rossini cluing, including the negative constraint
	Issue #13 - added support for corner/edge clues
	Issue #15 - added support for outside clues
	Issue #14 - added support for corner max under the "quad max value" name
	Issue #10 - added support for quad max arrows
	Issue #8 - added support for median cages
	Note: thanks to the GAS setters at CtC Discord: clover, Philip and Sam for mining numerous Sudoku variants, which comprise most of this push

9/10/2022
	Fixed Issue #4
	Fixed Issue #1 - added support for GSP
	Fixed Issue #5 - added support for multi-digit arrow sums
	Fixed Issue #6 - added support for genetics ruleset
	Fixed Issue #7 - added support for friendly cells
	Implemented several bug fixes affecting the negative Battenburg constraint and little killer cages found during development

9/4/2022
	Added support for shift lines
	Added support for up-and-down lines (alternately increase/decrease)
	Added support for neighbor sums
	Added support for run-on Renban lines

9/3/2022
	Added support for unicorn digits (thanks for the inspiration, clover!)
	Updated Kropki constraints to allow different difference and ratio values for white/black dots, respectively
	Added support for zones (thanks again clover1) and look-and-say cages (thanks Derektionary!)

9/2/2022bis
	Added support for Samurai sudoku
	Greatly improved solution printing, abstracting it into its own method
	Fixed printing to include support for multi-digit numbers

9/2/2022
	Added support for counting solutions for Japanese Sum Sudoku
	
9/1/2022
	Added support for slow thermometers (thanks for the inspiration, Philip Newman!)
	Added support for doubling lines
	Added support for magic squares
	Added support for position sums
	Added support for Japanese sum sudoku, excluding countSolutions method.
	